function fetchStates(countrySelect, stateSelect, options) {
    var params = new Object();
    params.action = "states";
    params.cmd = "fetchStates";

    var country = "";
    if (typeof countrySelect == "string") {
        country = countrySelect
    } else {
        country = countrySelect.val();
    }

    if (country != "") {
        params.country = country;
        if (typeof options == "undefined") {
            options = new Object();
        }

        stateSelect.destroyChosen();
        stateSelect.html("");
        stateSelect.prop("disabled", true);

        preSetup(stateSelect.attr("id"), "city");
        preSetup(stateSelect.attr("id"), "postalCode");

        $.ajax({
            type : "POST",
            url : getApplicationMainURL(),
            dataType : "json",
            data : params,
            success : function(data, textStatus, jqXHR) {
                if (typeof data.states != "undefined") {
                    if (data.states.length > 0) {
                        $.each(data.states, function(index, option) {
                            stateSelect.append("<option value='" + option.value + "'>" + option.name + "</option>");
                        });
                        stateSelect.prop("disabled", false);
                        stateSelect.initChosen();
                        if (typeof options.selectedState != "undefined") {
                            stateSelect.val(options.selectedState);
                        }
                    }
                }

                postSetup(stateSelect.attr("id"), "city", data.city);
                postSetup(stateSelect.attr("id"), "postalCode", data.postalCode);
            }
        });
        if(typeof updateGooglePlacesCountry =="function"){
            updateGooglePlacesCountry(countrySelect);
        }
    }
}

function preSetup(stateId, fieldId) {
    var postFix = stateId.replace("state", "");
    if ($("#" + fieldId + postFix).length) {
        var field = $("#" + fieldId + postFix);
        field.val("");
        field.prop("readonly", true);
    }
}

function postSetup(stateId, fieldId, fieldValue) {
    var postFix = stateId.replace("state", "");
    if ($("#" + fieldId + postFix).length) {
        var field = $("#" + fieldId + postFix);
        if (typeof fieldValue != "undefined") {
            field.val(fieldValue);
        } else {
            field.prop("readonly", false);
        }
    }
}

function confirmAddressDoctorAddress(useOriginalAddress) {
    $("#addressDoctorModalFooter").remove();

    var params = new Object();
    params.action = "addressDoctor";
    params.cmd = "confirmAddress";
    if (useOriginalAddress) {
        params.addressKey = -1;
    } else {
        params.addressKey = $("#modalContentWrapper").find("input[name='addressKey']:checked").val();
    }

    var addressConfirmed = false;

    $.ajax({
        type : "POST",
        cache : false,
        url : getApplicationMainURL(),
        data : params,
        complete : function(jqXHR, textStatus) {
            params = new Object();
            params.action = "NEXT";
            params.wizardSeed = globals.wizardSeed;
            if (typeof globals.wizardSeed != "undefined" && globals.wizardSeed != 0) {
                params.wizardSeed = globals.wizardSeed;
            }
            if (typeof globals.fingerprint != "undefined" && globals.fingerprint != "") {
                params.fingerprint = globals.fingerprint;
            }
            gotoPage(params);
        }
    });
}

//# sourceURL=address.js