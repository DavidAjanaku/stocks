var steps = new Array();
var imageData = new Array();
var processing = false;

var footNoteY = 620;
var footNoteLeftX = 20;
var footNoteRightX = 400;
var contentMargin = 20;

// Waiting for content to load
window.addEventListener("contentLoaded", function(event) {
    var data = event.detail;
    if (data.loaded) {
        globals.contentQueue.shift();
    }
});

var poll = function(conditionFunction, resolver, interval) {
    interval = interval || 500;

    var checkCondition = function() {
        // Check if condition is true
        var result = conditionFunction();
        if (result) {
            resolver();
        } else {
            setTimeout(checkCondition, interval);
        }
    };

    return checkCondition();
};

function printContent(element) {
    var clone = element.clone();
    $("script", clone).remove();

    var printerFrameTarget = $("#printme");
    printerFrameTarget.html("");
    clone.appendTo(printerFrameTarget);

    window.focus();
    window.print();
}

function exportApplication() {
    var accountId = "";
    if ($("[data-account-identifier]", window.parent.document).first().is(":visible")) {
        accountId = $("[data-account-identifier]", window.parent.document).first().text() + " • ";
    }
    var footerNote = accountId;
    if (!globals.isWhiteBranded) {
        footerNote += "Interactive Brokers Application • ";
    }
    footerNote += todayDate;

    window.parent.showProcessingDialog();

    var formClone = $("#applicationForm", window.parent.document).clone();
    formClone.html("");

    var printerFrameTarget = $("#printme");
    printerFrameTarget.html("");
    formClone.appendTo(printerFrameTarget);

    var params = new Object();
    params.action = "previousSteps";
    params.cmd = "fetchPrintableSteps";
    $.ajax({
        type : "POST",
        url : getApplicationMainURL(),
        data : params,
        dataType : "json",
        async : false,
        success : function(data, textStatus, jqXHR) {
            $.each(data.steps, function(index, value) {
                steps.push({formNumber:value, processed:false});
            });
        }
    });

    if (steps.length) {
        $("body").css("width", globals.pdfPageWidth);
        $("#printer", window.parent.document).css("width", "1500px");

        params.cmd = "printPreviousStep";
        $.each(steps, function(index, value) {
            poll(function() {
                return !processing;
            }, function() {
                processing = true;
                params.formNumber = value.formNumber;
                fetchPage(params, index);
            }, 100);
        });

        poll(function() {
            var allDone = true;
            $.each(steps, function(index, value) {
                allDone = allDone && value.processed;
            });
            return allDone;
        }, function() {
            var pdf = new jsPDF("p", "px", "a4", true);
            pdf.setFontSize(8);

            var pageCount = 1;
            var totalImages = Object.keys(imageData).length;
            for (var i = 0; i < totalImages; i++) {
                if (pageCount == 1) {
                    pdf.text(footNoteRightX, footNoteY, determinePageNumber(pageCount++, totalImages));
                    pdf.text(footNoteLeftX, footNoteY, footerNote);
                }

                var imageProperties = pdf.getImageProperties(imageData[i]);
                var pdfWidth = pdf.internal.pageSize.getWidth() - (contentMargin * 2);
                var pdfHeight = (imageProperties.height * pdfWidth) / imageProperties.width;

                pdf.addImage(imageData[i], "png", contentMargin, contentMargin, pdfWidth, pdfHeight, "img_" + i, "FAST");
                pdf.addPage();
                pdf.text(footNoteRightX, footNoteY, determinePageNumber(pageCount++, totalImages));
                pdf.text(footNoteLeftX, footNoteY, footerNote);
            }
            pdf.deletePage(pdf.internal.getNumberOfPages());
            pdf.save("Application.pdf");

            $("body").removeAttr("style");
            $("#printer", window.parent.document).removeAttr("style");
            window.parent.hideApplicationModal();

            steps = new Array();
            imageData = new Array();
            processing = false;
        }, 500);
    }
}

function determinePageNumber(page, total) {
    var pageString = globals.staticTextMap['#pageText'][globals.currentLanguage];
    pageString = pageString.replace("{0}", page);
    pageString = pageString.replace("{1}", total);
    return pageString;
}

function fetchPage(params, index) {
    $.ajax({
        type : "POST",
        url : getApplicationMainURL(),
        data : params,
        dataType : "html",
        async : false,
        success : function(data, textStatus, jqXHR) {
            if (data.length) {
                injectPage(data, index);

                var result = new Object();
                poll(function() {
                    return globals.contentQueue.length === 0;
                }, function() {
                    $("[data-fatcaStatus]", $("#printme")).each(function() {
                        if ($(this).not(":visible")) {
                            $(this).remove();
                        }
                    });

                    var result = processPage(index);
                    if (result.pendingImages > 1) {
                        result.processingSubPage = false;
                        $.each(result.subPageValues, function(i, value) {
                            poll(function() {
                                return !result.processingSubPage;
                            }, function() {
                                result.processingSubPage = true;
                                result.hideSubPages();
                                result.showSubPage(i);
                                convertPage(result, index);
                            }, 500);
                        });
                    } else {
                        convertPage(result, index);
                    }
                }, 500);
            }
        }
    });
}

function injectPage(data, index) {
    $("form#applicationForm").html("");
    $("form#applicationForm").addClass("text-sm");
    $("form#applicationForm").append("<div data-print='" + index + "'></div>");

    var page = $("div[data-print='" + index + "']");
    page.append($("[data-header]").html());
    page.append(data);

    if ($("#taxForm").length) {
        $("section").first().replaceWith($("div.tax-form").html());
    }

    page.find(".btn").not("[data-itoggle]").remove();
    page.find(".modal-footer").remove();
    page.find(".form-control-feedback").remove();
    page.find(".input-group-addon").remove();
    page.find(".form-link-remove").remove();
    page.find(".form-link-add").remove();
    page.find("hr").remove();

    page.find("h1").each(function() {
        var htmlContent = $(this).html();
        $(this).replaceWith("<h5>" + htmlContent + "</h5>");
    });
    page.find("h4").each(function() {
        var htmlContent = $(this).html();
        $(this).replaceWith("<h6>" + htmlContent + "</h6>");
    });
    page.find("div.side-help").each(function() {
        $(this).parent().prev().attr("class", "col-12");
        $(this).parent().remove();
    });
    page.find("div.col-lg-8").removeClass("col-lg-8");

    page.find(".modal-body").removeClass("modal-body");
    page.find(".has-success").removeClass("has-success");
    page.find(".space_20").removeClass("space_20").addClass("space_10");
    page.find(".space_30").removeClass("space_30").addClass("space_10");
    page.find(".space_40").removeClass("space_40").addClass("space_10");
    page.find(".space_50").removeClass("space_50").addClass("space_10");
    page.find(".margin-top-10").removeClass("margin-top-10");
    page.find(".margin-top-20").removeClass("margin-top-20");
    page.find(".margin-top-30").removeClass("margin-top-30");
    page.find(".margin-top-40").removeClass("margin-top-40");
    page.find("section").addClass("p-0");
    page.find(".container").addClass("pb-0");
    page.find("p, li").addClass("text-sm");

    page.find("input, select, textarea").each(function() {
        var this$ = $(this);
        if (this$.hasAttr("data-no-print-alteration")) {
            return true;
        }
        if (this$.is(":radio") || this$.is(":checkbox") || this$.attr("type") === "hidden") {
            return true;
        }

        this$.prop("readonly", false);
        this$.prop("disabled", false);
        if (this$.val() != "") {
            var theVal = this$.val();
            if (this$.is("select")) {
                theVal = this$.find("option:selected").text();
            } else if (this$.is("input") && this$.next().is("div.input-group-append")) {
                theVal = theVal + " " + this$.next().text();
                this$.next().remove();
            }
            this$.replaceWith("<div><strong>" + theVal + "</strong></div>");
        } else {
            this$.replaceWith("<div><i>Left Blank</i></div>");
        }
    });

    page.initToggle();
    page.initIChecks();
}

function processPage(index) {
    var page = $("div[data-print='" + index + "']");
    var maxPageHeight = globals.pdfPageHeight - getElementHeight($("[data-header]"));
    if (getElementHeight(page) > maxPageHeight) {
        calculateHeight({elements: page.children(), availableHeight: maxPageHeight, subIndex: 0, maxPageHeight: maxPageHeight});
    }

    var subPageValues = new Array();
    $("[data-sub-print]").each(function() {
        subPageValues[$(this).attr("data-sub-print")] = true;
    });

    var result = new Object();
    result.page = page;
    result.pendingImages = subPageValues.length > 0 ? subPageValues.length : 1;
    result.subPageValues = new Array();
    for (var i in subPageValues) {
        result.subPageValues.push("data-sub-print=" + i);
    }
    result.showSubPage = function(index) {
        $("[" + this.subPageValues[index] + "]").show();
        $("[" + this.subPageValues[index] + "]").parents().show();
    }
    result.hideSubPages = function() {
        $("[data-sub-print]").hide();
    }

    return result;
}

function calculateHeight(parameters) {
    for (var i = 0; i < parameters.elements.length; i++) {
        // Element Logic
        // - Not Visible
        // - Skip Height Calculation Attribute
        // - Element Height is smaller than 1
        var element = $(parameters.elements[i]);
        var elementHeight = getElementHeight(element);
        if (!element.is(":visible")) {
            continue;
        } else if (element.hasAttr("data-skip-height-calculation")) {
            continue;
        } else if (elementHeight < 1) {
            continue;
        }

        // Additional Element Logic
        var isPanel = element.hasClass("panel");
        var isForm = element.is("form");
        var isTaxFormDivider = element.hasClass("tax-form-part-divider");
        var isComponent = element.hasClass("ibmarketing_components");
        var isICheck = element.hasAttr("class") && (element.attr("class").startsWith("iradio") || element.attr("class").startsWith("icheckbox"));

        // Child Logic
        var elementChildren = element.children();
        var labelInputChildPair = elementChildren.length == 2 && element.children("label").length;
        var hasChildren = elementChildren.length > 0;
        var noChildren = elementChildren.length === 0;
        var hasPanelChildren = hasChildren && element.children(".panel").length;
        var bypassChildren = noChildren || labelInputChildPair || isPanel || isTaxFormDivider || isComponent || isICheck;
        var checkChildren = hasChildren && !bypassChildren;

        // Check If Children Are All Same Height
        if (checkChildren && elementChildren.length > 1) {
            var baseLineChildHeight = getElementHeight($(elementChildren[0]));
            var equalChildHeights = true;
            elementChildren.each(function() {
                if (getElementHeight($(this)) !== baseLineChildHeight) {
                    equalChildHeights = false;
                    return false;
                }
            });
            if (equalChildHeights) {
                checkChildren = false;
            }
        }

        if (elementHeight > parameters.availableHeight && checkChildren) {
            var calculationResults = calculateHeight({elements: element.children(), availableHeight: parameters.availableHeight, subIndex: parameters.subIndex, maxPageHeight: parameters.maxPageHeight});
            parameters.subIndex = calculationResults.subIndex;
            parameters.availableHeight = calculationResults.availableHeight;
            if (elementHeight < parameters.maxPageHeight && !hasPanelChildren && !isForm) {
                element.attr("data-sub-print", parameters.subIndex);
                element.attr("data-sub-print-meta", parameters.availableHeight);
            }
        } else if (elementHeight > parameters.availableHeight) {
            ++parameters.subIndex;
            parameters.availableHeight = parameters.maxPageHeight;
            element.attr("data-sub-print", parameters.subIndex);
            element.attr("data-sub-print-meta", parameters.availableHeight);
            element.attr("data-sub-print-meta-end", true);
        } else {
            element.attr("data-sub-print", parameters.subIndex);
            element.attr("data-sub-print-meta", parameters.availableHeight);
            parameters.availableHeight = parameters.availableHeight - elementHeight;
            if (parameters.availableHeight < 1) {
                ++parameters.subIndex;
                parameters.availableHeight = parameters.maxPageHeight;
            }
        }
    }

    return {subIndex: parameters.subIndex, availableHeight: parameters.availableHeight};
}

function convertPage(result, index) {
    html2canvas(result.page[0], {scale : 2}).then(function(canvas) {
        var image = new Image();
        image.src = canvas.toDataURL("image/png", 1.0);
        image.onload = function() {
            --result.pendingImages;
            result.processingSubPage = false;
            if (result.pendingImages === 0) {
                steps[index].processed = true;
                processing = false;
            }
        }
        imageData.push(image);
    });
}

function getElementHeight(element) {
    return element.outerHeight(true) + 1;
}

function convertToImage(callBackFunction) {
    try {
        window.parent.showProcessingDialog();

        var printerFrameTarget = $("#printme");
        printerFrameTarget.html("");

        var formClone = $("#applicationForm", window.parent.document).clone();
        formClone.appendTo(printerFrameTarget);

        $("body").css("width", globals.pdfPageWidth);
        $("#printer", window.parent.document).css("width", "1500px");

        html2canvas(printerFrameTarget[0], {logging : false}).then(function(canvas) {
            var imageContent = canvas.toDataURL("image/png", 1.0)
            callBackFunction(imageContent);

            $("body").removeAttr("style");
            $("#printer", window.parent.document).removeAttr("style");
        });
    } catch (e) {
        window.parent.hideApplicationModal();
        console.log(e);
    }
}

//# sourceURL=printer.js